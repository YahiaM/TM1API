

### Initialise Debug ###

If( pDebug >= 1 );

  # Set debug file name
  sDebugFile = cDebugFile | 'Epilog.debug';


EndIf;




### View deletion ###
ViewDestroy(pCube, cView);


### Subset deletion ###

### Split filter and create subsets ###



nDelimDimIndex = 1;

# Split filter into seperate dimensions
While( nDelimDimIndex <> 0 & Long( sFilter_Delete ) > 0 );

  nDelimDimIndex = Scan( pDelimDim, sFilter_Delete );
  If( nDelimDimIndex <> 0 );
    sArgument = Trim( SubSt( sFilter_Delete, 1, nDelimDimIndex - 1 ) );
    sFilter_Delete = Trim( SubSt( sFilter_Delete, nDelimDimIndex + Long( pDelimDim ), Long( sFilter_Delete ) ) );
  Else;
    sArgument = Trim( sFilter_Delete );
  EndIf;

  # Split argument into dimension and elements
  nDelimElemIndex = Scan( pDelimElem, sArgument );
  If( nDelimElemIndex = 0 );
    # Argument does not contain at least one delimiter (the first delimiter seperates the dimension name from the elements)
	nErrors = 1;
    sMessage = 'Filter not specified correctly: ' | sArgument;
    If( pDebug >= 1 );
      AsciiOutput( sDebugFile, sMessage );
    EndIf;
    ItemReject( sMessage );
  EndIf;

  sDimension = Trim( SubSt( sArgument, 1, nDelimElemIndex - 1 ) );
  sElements = Trim( SubSt( sArgument, nDelimElemIndex + 1, Long( sArgument ) ) );

  # Check that dimension exists in the cube
  If( DimensionExists( sDimension ) = 1 );
    If( pDebug <= 1 );
		SubsetDestroy(sDimension, cSubset);
		sMessage = 'Dimension: ' | sDimension | ' subset deletion OK';
    EndIf;
  Else;
	nErrors = 1;
    sMessage = 'Dimension: ' | sDimension | ' does not exist';
    If( pDebug >= 1 );
      AsciiOutput( sDebugFile, sMessage );
    EndIf;
    ItemReject( sMessage );
  EndIf;
End;


### Debug ###

If( pDebug >= 1 );


  # Log errors
  If( nErrors <> 0 );
    AsciiOutput( sDebugFile, 'Errors Occurred' );
  EndIf;

  # Log finish time
  AsciiOutput( sDebugFile, 'Process Finished: ' | TimSt( Now, '\d-\m-\Y \h:\i:\s' ) );

EndIf;


### If errors occurred terminate process with a major error status ###

If( nErrors <> 0 );
  ProcessQuit;
EndIf;


### End Epilog ###
